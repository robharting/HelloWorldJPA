<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nl.rob</groupId>
    <artifactId>helloworldjpa</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <hibernate.version>5.2.12.Final</hibernate.version>

        <!-- In Java SE you should use a JTA transaction manager as a JDBC connection pool, Bitronix is good -->
        <btm.version>2.1.3</btm.version>

        <!-- For small scale deployment, use the H2 RDBMS, all Java -->
        <h2.version>1.3.171</h2.version>

        <!-- Everyone's favorite -->
        <slf4j.impl.version>1.6.1</slf4j.impl.version>

        <!-- Integration testing with TestNG is easier than JUnit -->
        <testng.version>6.8.7</testng.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!--
       In this environment, use a JTA-compatible resource/transaction manager instead of
       a simple dumb JDBC connection pool. Bitronix is good: http://btm.codehaus.org/
        -->
        <dependency>
            <groupId>org.codehaus.btm</groupId>
            <artifactId>btm</artifactId>
            <version>${btm.version}</version>
        </dependency>

        <!-- H2 rocks for small-scale deployment -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>

        <!-- Everything is tested with TestNG, avoid JUnit for integration tests! -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <exclusions>
                <!-- No thank you -->
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Logging, everyone's favorite -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.impl.version}</version>
        </dependency>
    </dependencies>




</project>